name: Release Desktop Server

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build:
    name: Build and Release
    runs-on: [self-hosted, Windows, X64]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25.1'

      - name: Install Buf CLI
        run: |
          choco install buf -y

      - name: Generate Proto files with Buf
        run: |
          buf generate

      - name: Build etc_meisai_scraper binary
        shell: powershell
        run: |
          Write-Host "Building etc_meisai_scraper..."

          # Clone etc_meisai_scraper repository
          git clone https://github.com/yhonda-ohishi/etc_meisai_scraper.git temp_etc_scraper
          cd temp_etc_scraper

          # Fetch all tags and checkout the latest release
          git fetch --tags
          $latestTag = git describe --tags --abbrev=0
          Write-Host "Checking out latest tag: $latestTag"
          git checkout $latestTag

          # Build the binary with -H windowsgui to hide console
          go mod tidy
          go build -ldflags="-H windowsgui" -o ../etc_meisai_scraper.exe .

          cd ..
          Remove-Item -Recurse -Force temp_etc_scraper
          Write-Host "Built etc_meisai_scraper.exe $latestTag (no console window)"

      - name: Create frontend dist directory
        run: |
          mkdir -p frontend/dist
          echo "placeholder" > frontend/dist/.gitkeep

      - name: Download latest frontend
        shell: powershell
        run: |
          $version = "${{ github.ref }}".Replace("refs/tags/", "")
          go run -ldflags="-X github.com/yhonda-ohishi-pub-dev/desktop-server/updater.Version=$version" . -update

      - name: Build for Windows (GUI mode)
        shell: powershell
        run: |
          go mod tidy
          $version = "${{ github.ref }}".Replace("refs/tags/", "")
          go build -ldflags="-H windowsgui -X github.com/yhonda-ohishi-pub-dev/desktop-server/updater.Version=$version" -o desktop-server.exe .

      - name: Get version from tag
        id: get_version
        shell: powershell
        run: |
          $version = "${{ github.ref }}".Replace("refs/tags/", "")
          echo "VERSION=$version" >> $env:GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: Desktop Server ${{ steps.get_version.outputs.VERSION }}
          body: |
            # Desktop Server ${{ steps.get_version.outputs.VERSION }}

            Windows Desktop Application for local database management with gRPC-Web API.

            ## Features

            - Single Binary with embedded frontend
            - System Tray interface
            - gRPC-Web API
            - Multi-Database Support (SQL Server, MySQL)
            - Auto-update functionality

            ## Installation

            1. Download `desktop-server.exe`
            2. Double-click to run
            3. The app will appear in your system tray
            4. Right-click the tray icon and select "Open App"

            ## For Developers

            **Protocol Buffers (BSR):**
            - `buf.build/yhonda-ohishi/desktop-server` - ProgressService (download progress streaming)
            - `buf.build/yhonda-ohishi/db-service` - Database services
            - `buf.build/yhonda-ohishi/dtako-rows` - DTako rows services
            - `buf.build/yhonda-ohishi/dtako-events` - DTako events services
            - `buf.build/yhonda-ohishi/etc-meisai-scraper` - ETC download service

            **Binaries:**
            - `desktop-server.exe` - Main application
            - `etc_meisai_scraper.exe` - ETC data scraper (optional, auto-started when needed)

            All proto definitions are available on Buf Schema Registry. Use `buf` CLI or BSR web interface to generate client code.

            ## What's Changed

            See commits for details.

            **Full Changelog**: https://github.com/${{ github.repository }}/commits/${{ steps.get_version.outputs.VERSION }}
          files: |
            desktop-server.exe
            etc_meisai_scraper.exe
            proto/progress.proto
          draft: false
          prerelease: false
