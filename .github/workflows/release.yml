name: Release Desktop Server

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build:
    name: Build and Release
    runs-on: [self-hosted, Windows, X64]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Install Protocol Buffers
        run: |
          choco install protoc -y
          go install google.golang.org/protobuf/cmd/protoc-gen-go@latest
          go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest

      - name: Generate Proto files
        run: |
          protoc --go_out=. --go_opt=paths=source_relative --go-grpc_out=. --go-grpc_opt=paths=source_relative proto/database.proto

      - name: Copy db_service proto files
        shell: powershell
        run: |
          New-Item -ItemType Directory -Force -Path proto/db_service
          $dbServicePath = Get-ChildItem -Path "$env:USERPROFILE/go/pkg/mod/github.com/yhonda-ohishi/db_service@*" -Directory | Select-Object -First 1
          if ($dbServicePath) {
            Copy-Item "$dbServicePath/src/proto/*.proto" -Destination proto/db_service/ -Force
            Write-Host "Copied db_service proto files from $dbServicePath"
          } else {
            Write-Host "Warning: db_service proto files not found"
          }

      - name: Create frontend dist directory
        run: |
          mkdir -p frontend/dist
          echo "placeholder" > frontend/dist/.gitkeep

      - name: Download latest frontend
        run: |
          go run . -update

      - name: Build for Windows (GUI mode)
        shell: powershell
        run: |
          go mod tidy
          $version = "${{ github.ref }}".Replace("refs/tags/", "")
          go build -ldflags="-H windowsgui -X desktop-server/updater.Version=$version" -o desktop-server.exe .

      - name: Get version from tag
        id: get_version
        shell: powershell
        run: |
          $version = "${{ github.ref }}".Replace("refs/tags/", "")
          echo "VERSION=$version" >> $env:GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: Desktop Server ${{ steps.get_version.outputs.VERSION }}
          body: |
            # Desktop Server ${{ steps.get_version.outputs.VERSION }}

            Windows Desktop Application for local database management with gRPC-Web API.

            ## Features

            - Single Binary with embedded frontend
            - System Tray interface
            - gRPC-Web API
            - Multi-Database Support (SQL Server, MySQL)
            - Auto-update functionality

            ## Installation

            1. Download `desktop-server.exe`
            2. Double-click to run
            3. The app will appear in your system tray
            4. Right-click the tray icon and select "Open App"

            ## For Developers

            **Protocol Buffers definitions:**
            - `database.proto` - Desktop-server gRPC API
            - `ryohi.proto` - db_service gRPC API (ETCMeisai, DTakoUriageKeihi, DTakoFerryRows, ETCMeisaiMapping)

            Use the proto files to generate client code for your preferred language.

            ## What's Changed

            See commits for details.

            **Full Changelog**: https://github.com/${{ github.repository }}/commits/${{ steps.get_version.outputs.VERSION }}
          files: |
            desktop-server.exe
            proto/database.proto
            proto/db_service/*.proto
          draft: false
          prerelease: false
